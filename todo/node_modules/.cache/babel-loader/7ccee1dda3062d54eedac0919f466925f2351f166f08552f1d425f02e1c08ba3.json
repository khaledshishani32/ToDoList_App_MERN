{"ast":null,"code":"var _jsxFileName = \"/home/shosh/Desktop/ToDoList_App_MERN/todo/src/TodoItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = 'http://localhost:4001/todo';\nfunction TodoItem(props) {\n  _s();\n  const {\n    name,\n    id,\n    completed,\n    setItems\n  } = props;\n  const [isEditing, setIsEditing] = useState(false);\n  const [editValue, setEditValue] = useState(name);\n  const originalValueRef = useRef(name); // Store the original value\n  const inputRef = useRef(null);\n  useEffect(() => {\n    // Handle clicks outside of the input to revert changes\n    function handleClickOutside(event) {\n      if (inputRef.current && !inputRef.current.contains(event.target)) {\n        cancelEditing(); // Revert changes if clicking outside\n      }\n    }\n    if (isEditing) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isEditing]);\n  const cancelEditing = () => {\n    setEditValue(originalValueRef.current); // Revert to the original value\n    setIsEditing(false);\n  };\n  const deleteTodo = async id => {\n    try {\n      const response = await fetch(`${API_BASE}/delete/${id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error('Failed to delete a task');\n      }\n      const data = await response.json();\n      setItems(items => items.filter(item => item._id !== data._id));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  const updateTodo = async () => {\n    if (editValue.trim() === '') {\n      alert('Task name cannot be empty');\n      return;\n    }\n    try {\n      const response = await fetch(`${API_BASE}/update/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: editValue\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update task');\n      }\n      const updatedTodo = await response.json();\n      setItems(items => items.map(item => item._id === id ? {\n        ...item,\n        name: updatedTodo.name\n      } : item));\n      originalValueRef.current = editValue; // Update the original value\n      setIsEditing(false);\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `todo-item ${completed ? 'check-complete' : ''}`,\n    children: [isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: editValue,\n      ref: inputRef // Reference to the input\n      ,\n      onChange: e => setEditValue(e.target.value),\n      onKeyDown: e => {\n        if (e.key === 'Enter') updateTodo();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"edit-btn\",\n      onClick: () => setIsEditing(!isEditing),\n      children: \"\\u270F\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"delete-btn\",\n      onClick: () => deleteTodo(id),\n      children: \"\\uD83D\\uDDD1\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"save-btn\",\n      onClick: updateTodo,\n      children: \"\\uD83D\\uDCBE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoItem, \"HuARxef/9FBhprIjmWFKNBAY0q4=\");\n_c = TodoItem;\nexport default TodoItem;\nvar _c;\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","API_BASE","TodoItem","props","_s","name","id","completed","setItems","isEditing","setIsEditing","editValue","setEditValue","originalValueRef","inputRef","handleClickOutside","event","current","contains","target","cancelEditing","document","addEventListener","removeEventListener","deleteTodo","response","fetch","method","ok","Error","data","json","items","filter","item","_id","error","console","updateTodo","trim","alert","headers","body","JSON","stringify","updatedTodo","map","className","children","type","value","ref","onChange","e","onKeyDown","key","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/shosh/Desktop/ToDoList_App_MERN/todo/src/TodoItem.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nconst API_BASE = 'http://localhost:4001/todo';\n\nfunction TodoItem(props) {\n  const { name, id, completed, setItems } = props;\n  const [isEditing, setIsEditing] = useState(false);\n  const [editValue, setEditValue] = useState(name);\n  const originalValueRef = useRef(name); // Store the original value\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    // Handle clicks outside of the input to revert changes\n    function handleClickOutside(event) {\n      if (inputRef.current && !inputRef.current.contains(event.target)) {\n        cancelEditing(); // Revert changes if clicking outside\n      }\n    }\n\n    if (isEditing) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isEditing]);\n\n  const cancelEditing = () => {\n    setEditValue(originalValueRef.current); // Revert to the original value\n    setIsEditing(false);\n  };\n\n  const deleteTodo = async (id) => {\n    try {\n      const response = await fetch(`${API_BASE}/delete/${id}`, {\n        method: 'DELETE',\n      });\n      if (!response.ok) {\n        throw new Error('Failed to delete a task');\n      }\n      const data = await response.json();\n      setItems((items) => items.filter((item) => item._id !== data._id));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  const updateTodo = async () => {\n    if (editValue.trim() === '') {\n      alert('Task name cannot be empty');\n      return;\n    }\n\n    try {\n      const response = await fetch(`${API_BASE}/update/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ name: editValue }),\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update task');\n      }\n      const updatedTodo = await response.json();\n      setItems((items) => items.map((item) => (item._id === id ? { ...item, name: updatedTodo.name } : item)));\n      originalValueRef.current = editValue; // Update the original value\n      setIsEditing(false);\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n  };\n\n  return (\n    <div className={`todo-item ${completed ? 'check-complete' : ''}`}>\n      {isEditing ? (\n        <input\n          type=\"text\"\n          value={editValue}\n          ref={inputRef} // Reference to the input\n          onChange={(e) => setEditValue(e.target.value)}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') updateTodo();\n          }}\n        />\n      ) : (\n        <div className=\"text\">{name}</div>\n      )}\n\n      <button className=\"edit-btn\" onClick={() => setIsEditing(!isEditing)}>\n        ‚úèÔ∏è\n      </button>\n      <button className=\"delete-btn\" onClick={() => deleteTodo(id)}>\n        üóëÔ∏è\n      </button>\n\n      {isEditing && (\n        <button className=\"save-btn\" onClick={updateTodo}>\n          üíæ\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default TodoItem;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC3D,MAAMC,QAAQ,GAAG,4BAA4B;AAE7C,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACvB,MAAM;IAAEC,IAAI;IAAEC,EAAE;IAAEC,SAAS;IAAEC;EAAS,CAAC,GAAGL,KAAK;EAC/C,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAACS,IAAI,CAAC;EAChD,MAAMQ,gBAAgB,GAAGf,MAAM,CAACO,IAAI,CAAC,CAAC,CAAC;EACvC,MAAMS,QAAQ,GAAGhB,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd;IACA,SAASkB,kBAAkBA,CAACC,KAAK,EAAE;MACjC,IAAIF,QAAQ,CAACG,OAAO,IAAI,CAACH,QAAQ,CAACG,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,EAAE;QAChEC,aAAa,CAAC,CAAC,CAAC,CAAC;MACnB;IACF;IAEA,IAAIX,SAAS,EAAE;MACbY,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEP,kBAAkB,CAAC;IAC5D,CAAC,MAAM;MACLM,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAER,kBAAkB,CAAC;IAC/D;IAEA,OAAO,MAAM;MACXM,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAER,kBAAkB,CAAC;IAC/D,CAAC;EACH,CAAC,EAAE,CAACN,SAAS,CAAC,CAAC;EAEf,MAAMW,aAAa,GAAGA,CAAA,KAAM;IAC1BR,YAAY,CAACC,gBAAgB,CAACI,OAAO,CAAC,CAAC,CAAC;IACxCP,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMc,UAAU,GAAG,MAAOlB,EAAE,IAAK;IAC/B,IAAI;MACF,MAAMmB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGzB,QAAQ,WAAWK,EAAE,EAAE,EAAE;QACvDqB,MAAM,EAAE;MACV,CAAC,CAAC;MACF,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;MAC5C;MACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClCvB,QAAQ,CAAEwB,KAAK,IAAKA,KAAK,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKL,IAAI,CAACK,GAAG,CAAC,CAAC;IACpE,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI3B,SAAS,CAAC4B,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC3BC,KAAK,CAAC,2BAA2B,CAAC;MAClC;IACF;IAEA,IAAI;MACF,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGzB,QAAQ,WAAWK,EAAE,EAAE,EAAE;QACvDqB,MAAM,EAAE,KAAK;QACbc,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEvC,IAAI,EAAEM;QAAU,CAAC;MAC1C,CAAC,CAAC;MACF,IAAI,CAACc,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC1C;MACA,MAAMgB,WAAW,GAAG,MAAMpB,QAAQ,CAACM,IAAI,CAAC,CAAC;MACzCvB,QAAQ,CAAEwB,KAAK,IAAKA,KAAK,CAACc,GAAG,CAAEZ,IAAI,IAAMA,IAAI,CAACC,GAAG,KAAK7B,EAAE,GAAG;QAAE,GAAG4B,IAAI;QAAE7B,IAAI,EAAEwC,WAAW,CAACxC;MAAK,CAAC,GAAG6B,IAAK,CAAC,CAAC;MACxGrB,gBAAgB,CAACI,OAAO,GAAGN,SAAS,CAAC,CAAC;MACtCD,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,OAAO0B,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,oBACEpC,OAAA;IAAK+C,SAAS,EAAE,aAAaxC,SAAS,GAAG,gBAAgB,GAAG,EAAE,EAAG;IAAAyC,QAAA,GAC9DvC,SAAS,gBACRT,OAAA;MACEiD,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEvC,SAAU;MACjBwC,GAAG,EAAErC,QAAS,CAAC;MAAA;MACfsC,QAAQ,EAAGC,CAAC,IAAKzC,YAAY,CAACyC,CAAC,CAAClC,MAAM,CAAC+B,KAAK,CAAE;MAC9CI,SAAS,EAAGD,CAAC,IAAK;QAChB,IAAIA,CAAC,CAACE,GAAG,KAAK,OAAO,EAAEjB,UAAU,CAAC,CAAC;MACrC;IAAE;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,gBAEF3D,OAAA;MAAK+C,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAE3C;IAAI;MAAAmD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAClC,eAED3D,OAAA;MAAQ+C,SAAS,EAAC,UAAU;MAACa,OAAO,EAAEA,CAAA,KAAMlD,YAAY,CAAC,CAACD,SAAS,CAAE;MAAAuC,QAAA,EAAC;IAEtE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT3D,OAAA;MAAQ+C,SAAS,EAAC,YAAY;MAACa,OAAO,EAAEA,CAAA,KAAMpC,UAAU,CAAClB,EAAE,CAAE;MAAA0C,QAAA,EAAC;IAE9D;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAERlD,SAAS,iBACRT,OAAA;MAAQ+C,SAAS,EAAC,UAAU;MAACa,OAAO,EAAEtB,UAAW;MAAAU,QAAA,EAAC;IAElD;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACT;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACvD,EAAA,CAtGQF,QAAQ;AAAA2D,EAAA,GAAR3D,QAAQ;AAwGjB,eAAeA,QAAQ;AAAC,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}