{"ast":null,"code":"var _jsxFileName = \"/home/shosh/Desktop/ToDoList_App_MERN/todo/src/components/TodoItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = 'http://localhost:4001/todo';\nfunction TodoItem(props) {\n  _s();\n  const {\n    name,\n    id,\n    completed,\n    setItems\n  } = props;\n  const [isEditing, setIsEditing] = useState(false);\n  const [editValue, setEditValue] = useState(name);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const confirmDelete = () => {\n    setShowConfirmation(true); // Show the confirmation message\n  };\n  const handleDelete = async () => {\n    try {\n      const response = await fetch(`${API_BASE}/delete/${id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error('Failed to delete a task');\n      }\n      const data = await response.json();\n      setItems(items => items.filter(item => item._id !== data._id));\n      setShowConfirmation(false); // Hide confirmation after deletion\n    } catch (error) {\n      console.error('Error deleting task:', error);\n      setShowConfirmation(false); // Hide confirmation even if an error occurs\n    }\n  };\n  const cancelDelete = () => {\n    setShowConfirmation(false); // Hide confirmation when canceled\n  };\n  const updateTodo = async () => {\n    if (editValue.trim() === '') {\n      alert('Task name cannot be empty');\n      return;\n    }\n    try {\n      const response = await fetch(`${API_BASE}/update/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: editValue\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update task');\n      }\n      const updatedTodo = await response.json();\n      setItems(items => items.map(item => item._id === id ? {\n        ...item,\n        name: updatedTodo.name\n      } : item));\n      setIsEditing(false);\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `todo-item ${completed ? 'check-complete' : ''}`,\n    children: [isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: editValue,\n      onChange: e => setEditValue(e.target.value),\n      onKeyDown: e => {\n        if (e.key === 'Enter') updateTodo();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"edit-btn\",\n      onClick: () => setIsEditing(!isEditing),\n      children: \"\\u270F\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"delete-btn\",\n      onClick: confirmDelete,\n      children: \"\\uD83D\\uDDD1\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"save-btn\",\n      onClick: updateTodo,\n      children: \"\\uD83D\\uDCBE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), showConfirmation && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"confirmation-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Are you sure you want to delete this task?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDelete,\n        children: \"Yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: cancelDelete,\n        children: \"No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoItem, \"VElhUMte1z+42/czauPg3NSXx5o=\");\n_c = TodoItem;\nexport default TodoItem;\nvar _c;\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","API_BASE","TodoItem","props","_s","name","id","completed","setItems","isEditing","setIsEditing","editValue","setEditValue","showConfirmation","setShowConfirmation","confirmDelete","handleDelete","response","fetch","method","ok","Error","data","json","items","filter","item","_id","error","console","cancelDelete","updateTodo","trim","alert","headers","body","JSON","stringify","updatedTodo","map","className","children","type","value","onChange","e","target","onKeyDown","key","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/shosh/Desktop/ToDoList_App_MERN/todo/src/components/TodoItem.js"],"sourcesContent":["import React, { useState } from 'react';\nconst API_BASE = 'http://localhost:4001/todo';\n\nfunction TodoItem(props) {\n  const { name, id, completed, setItems } = props;\n  const [isEditing, setIsEditing] = useState(false);\n  const [editValue, setEditValue] = useState(name);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n\n  const confirmDelete = () => {\n    setShowConfirmation(true); // Show the confirmation message\n  };\n\n  const handleDelete = async () => {\n    try {\n      const response = await fetch(`${API_BASE}/delete/${id}`, {\n        method: 'DELETE',\n      });\n      if (!response.ok) {\n        throw new Error('Failed to delete a task');\n      }\n      const data = await response.json();\n      setItems((items) => items.filter((item) => item._id !== data._id));\n      setShowConfirmation(false); // Hide confirmation after deletion\n    } catch (error) {\n      console.error('Error deleting task:', error);\n      setShowConfirmation(false); // Hide confirmation even if an error occurs\n    }\n  };\n\n  const cancelDelete = () => {\n    setShowConfirmation(false); // Hide confirmation when canceled\n  };\n\n  const updateTodo = async () => {\n    if (editValue.trim() === '') {\n      alert('Task name cannot be empty');\n      return;\n    }\n\n    try {\n      const response = await fetch(`${API_BASE}/update/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ name: editValue }),\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update task');\n      }\n      const updatedTodo = await response.json();\n      setItems((items) => items.map((item) => (item._id === id ? { ...item, name: updatedTodo.name } : item)));\n      setIsEditing(false);\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n  };\n\n  return (\n    <div className={`todo-item ${completed ? 'check-complete' : ''}`} key={id}>\n      {isEditing ? (\n        <input\n          type=\"text\"\n          value={editValue}\n          onChange={(e) => setEditValue(e.target.value)}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') updateTodo();\n          }}\n        />\n      ) : (\n        <div className=\"text\">{name}</div>\n      )}\n\n      <button className=\"edit-btn\" onClick={() => setIsEditing(!isEditing)}>\n        ‚úèÔ∏è\n      </button>\n      <button className=\"delete-btn\" onClick={confirmDelete}>\n        üóëÔ∏è\n      </button>\n\n      {isEditing && (\n        <button className=\"save-btn\" onClick={updateTodo}>\n          üíæ\n        </button>\n      )}\n\n      {showConfirmation && (\n        <div className=\"confirmation-popup\">\n          <p>Are you sure you want to delete this task?</p>\n          <button onClick={handleDelete}>Yes</button>\n          <button onClick={cancelDelete}>No</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default TodoItem;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}