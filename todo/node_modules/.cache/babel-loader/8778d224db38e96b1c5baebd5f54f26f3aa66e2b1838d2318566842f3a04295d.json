{"ast":null,"code":"var _jsxFileName = \"/home/shosh/Desktop/ToDoList_App_MERN/todo/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Routes, useLocation } from 'react-router-dom';\nimport Register from './components/Register';\nimport Login from './components/Login';\nimport TodoApp from './components/TodoApp';\nimport Header from './components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const location = useLocation(); // Hook to get current location\n\n  // Determine if the current path is a public route (no header needed)\n  const publicRoutes = ['/login', '/register'];\n  const isPublicRoute = publicRoutes.includes(location.pathname);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [!isPublicRoute && /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 26\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(TodoApp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Routes","useLocation","Register","Login","TodoApp","Header","jsxDEV","_jsxDEV","App","_s","location","publicRoutes","isPublicRoute","includes","pathname","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/home/shosh/Desktop/ToDoList_App_MERN/todo/src/App.js"],"sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Route, Routes, useLocation } from 'react-router-dom';\nimport Register from './components/Register';\nimport Login from './components/Login';\nimport TodoApp from './components/TodoApp';\nimport Header from './components/Header';\n\nconst App = () => {\n  const location = useLocation(); // Hook to get current location\n\n  // Determine if the current path is a public route (no header needed)\n  const publicRoutes = ['/login', '/register'];\n  const isPublicRoute = publicRoutes.includes(location.pathname);\n\n  return (\n    <Router>\n      {!isPublicRoute && <Header />} {/* Only show Header if not on public routes */}\n      <Routes>\n        <Route path=\"/register\" element={<Register />} />\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/\" element={<TodoApp />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,WAAW,QAAQ,kBAAkB;AACtF,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC;EACA,MAAMU,YAAY,GAAG,CAAC,QAAQ,EAAE,WAAW,CAAC;EAC5C,MAAMC,aAAa,GAAGD,YAAY,CAACE,QAAQ,CAACH,QAAQ,CAACI,QAAQ,CAAC;EAE9D,oBACEP,OAAA,CAACT,MAAM;IAAAiB,QAAA,GACJ,CAACH,aAAa,iBAAIL,OAAA,CAACF,MAAM;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAAC,GAAC,eAC/BZ,OAAA,CAACP,MAAM;MAAAe,QAAA,gBACLR,OAAA,CAACR,KAAK;QAACqB,IAAI,EAAC,WAAW;QAACC,OAAO,eAAEd,OAAA,CAACL,QAAQ;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjDZ,OAAA,CAACR,KAAK;QAACqB,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAEd,OAAA,CAACJ,KAAK;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3CZ,OAAA,CAACR,KAAK;QAACqB,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEd,OAAA,CAACH,OAAO;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb,CAAC;AAACV,EAAA,CAjBID,GAAG;EAAA,QACUP,WAAW;AAAA;AAAAqB,EAAA,GADxBd,GAAG;AAmBT,eAAeA,GAAG;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}