{"ast":null,"code":"var _jsxFileName = \"/home/shosh/Desktop/ToDoList_App_MERN/todo/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport TodoItem from './TodoItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = 'http://localhost:4001/todo';\nfunction App() {\n  _s();\n  const [items, setItems] = useState([]);\n  const [input, setInput] = useState('');\n  const [message, setMessage] = useState(''); // State for displaying messages\n\n  useEffect(() => {\n    GetTodos();\n  }, []);\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n  const GetTodos = () => {\n    fetch(API_BASE).then(res => res.json()).then(data => setItems(data)).catch(err => console.log(err));\n  };\n  const addItem = async () => {\n    const trimmedInput = input.trim();\n\n    // Check for duplicate task\n    if (items.some(item => item.name.toLowerCase() === trimmedInput.toLowerCase())) {\n      setMessage('Task already exists!');\n      setTimeout(() => setMessage(''), 3000); // Clear message after 3 seconds\n      return;\n    }\n    if (trimmedInput === '') {\n      setMessage('Task cannot be empty!');\n      setTimeout(() => setMessage(''), 3000);\n      return;\n    }\n    try {\n      const data = await fetch(API_BASE + '/new', {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: trimmedInput,\n          completed: false\n        })\n      }).then(res => res.json());\n      setItems([...items, data]);\n      setInput('');\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heading\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TO-DO-APP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addItem,\n        disabled: input.trim() === '',\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"ADD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todolist\",\n      children: items.map(item => {\n        const {\n          _id,\n          name,\n          completed\n        } = item;\n        return /*#__PURE__*/_jsxDEV(TodoItem, {\n          // Add the unique key prop here\n          name: name,\n          id: _id,\n          completed: completed,\n          setItems: setItems\n        }, _id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Y8WrgH1KCWcYwwAD8HKHeVF0FJg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","TodoItem","jsxDEV","_jsxDEV","API_BASE","App","_s","items","setItems","input","setInput","message","setMessage","GetTodos","handleChange","e","target","value","fetch","then","res","json","data","catch","err","console","log","addItem","trimmedInput","trim","some","item","name","toLowerCase","setTimeout","method","headers","body","JSON","stringify","completed","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","disabled","map","_id","id","_c","$RefreshReg$"],"sources":["/home/shosh/Desktop/ToDoList_App_MERN/todo/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport TodoItem from './TodoItem';\nconst API_BASE = 'http://localhost:4001/todo';\n\nfunction App() {\n  const [items, setItems] = useState([]);\n  const [input, setInput] = useState('');\n  const [message, setMessage] = useState(''); // State for displaying messages\n\n  useEffect(() => {\n    GetTodos();\n  }, []);\n\n  const handleChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const GetTodos = () => {\n    fetch(API_BASE)\n      .then((res) => res.json())\n      .then((data) => setItems(data))\n      .catch((err) => console.log(err));\n  };\n\n  const addItem = async () => {\n    const trimmedInput = input.trim();\n\n    // Check for duplicate task\n    if (items.some((item) => item.name.toLowerCase() === trimmedInput.toLowerCase())) {\n      setMessage('Task already exists!');\n      setTimeout(() => setMessage(''), 3000); // Clear message after 3 seconds\n      return;\n    }\n\n    if (trimmedInput === '') {\n      setMessage('Task cannot be empty!');\n      setTimeout(() => setMessage(''), 3000);\n      return;\n    }\n\n    try {\n      const data = await fetch(API_BASE + '/new', {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json',\n        },\n        body: JSON.stringify({\n          name: trimmedInput,\n          completed: false,\n        }),\n      }).then((res) => res.json());\n\n      setItems([...items, data]);\n      setInput('');\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>TO-DO-APP</h1>\n      </div>\n      {message && <div className=\"message\">{message}</div>} {/* Display the message if it exists */}\n      <div className=\"form\">\n        <input type=\"text\" value={input} onChange={handleChange} />\n        <button onClick={addItem} disabled={input.trim() === ''}>\n          <span>ADD</span>\n        </button>\n      </div>\n      <div className=\"todolist\">\n  {items.map((item) => {\n    const { _id, name, completed } = item;\n    return (\n      <TodoItem\n        key={_id} // Add the unique key prop here\n        name={name}\n        id={_id}\n        completed={completed}\n        setItems={setItems}\n      />\n    );\n  })}\n</div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}